# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
orbs:
  docker: circleci/docker@1.5.0
  slack: circleci/slack@4.1.3
  aws-cli: circleci/aws-cli@1.3.0

version: 2.1

jobs:
  docker-steps:
      executor: docker/docker
      
      steps:
      - checkout
      - run:
         name: setup local enviroment
         command: |
           python3 -m venv ~/.devops
           source ~/.devops/bin/activate
           pip install pylint
           pip install --upgrade pip
           pip install black
           pip install pytest
           pip install ipython
      - run:
         name: make install
         command: |
           cd ./project-ml-microservice-kubernetes
           make install
      - run: 
         name: make lint
         command : |
             cd ./project-ml-microservice-kubernetes/
             pip install --upgrade pip && python3 -m pip install pylint --no-cache-dir
             pip install -r requirements.txt
             make lint
      - run:   
         name: install docker
         command: |
            cd project-ml-microservice-kubernetes

            sudo apt-get update

            sudo apt-get install \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg \
            lsb-release
            
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  
             sudo apt remove docker docker-engine docker.io  
             sudo apt install apt-transport-https ca-certificates curl software-properties-common gnupg
             curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - 
             sudo apt-key fingerprint 0EBFCD88
             sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
             sudo apt-get update
             sudo apt-get install docker-ce docker-ce-cli containerd.io
             #apt-cache madison docker-ce
             #apt-cache madison docker-ce-cli
             sudo apt-get install docker-ce=5:20.10.6~3-0~debian-buster docker-ce-cli=5:20.10.6~3-0~debian-buster containerd.io
             #sudo apt-get install docker-ce=5:18.09.0~3-0~ubuntu-bionic docker-ce-cli=5:18.09.0~3-0~ubuntu-bionic containerd.io
             who
             echo $USER
             #sudo usermod -aG docker $USER
             #sudo systemctl restart ssh.service
             #sudo docker run hello-world
            #./upload_docker.sh
            #./run_docker.sh

  build:
       docker:
        - image: python:3.7.3-stretch
       working_directory: ~/project-ml-microservice-kubernetes
       steps:
         - checkout
      # Download and cache dependencies
         - run:
            command:  cd ./project-ml-microservice-kubernetes
         - restore_cache:
            keys:
             - v1-dependencies-{{ checksum "./project-ml-microservice-kubernetes/requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
             - v1-dependencies-

         - run:
             name: install dependencies
             command: |
              python3 -m venv ~/.devops
              source ~/.devops/bin/activate
              cd ./project-ml-microservice-kubernetes
              ls -l
              make install
            # Install hadolint
                       
         - save_cache:
             paths:
             - ./venv
             key: v1-dependencies-{{ checksum "./project-ml-microservice-kubernetes/requirements.txt" }}

         - run:
            name: run lint
            command: |
             cd ./project-ml-microservice-kubernetes/
             pip install --upgrade pip && python3 -m pip install pylint --no-cache-dir
             pip install -r requirements.txt
             make lint

workflows:
  default:
    jobs:
      - docker-steps
      #- build: 
        # requires: [docker-steps]

